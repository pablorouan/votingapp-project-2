name: Deploy to EKS (deploy-only, static keys)

on:
  push:
    branches: [ main ]
    paths:
      - 'k8s/**'
      - '.github/workflows/ci-cd-pipeline.yml'
  workflow_dispatch:

concurrency:
  group: eks-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials (static keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "latest"

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig \
            --name pablorouan-eks-lab \
            --region ap-northeast-2

      - name: Ensure namespace exists
        run: |
          kubectl get ns voting-app >/dev/null 2>&1 || kubectl create namespace voting-app

      - name: Apply Kubernetes manifests
        run: kubectl apply -n voting-app -f k8s/

      # Pin images to latest on Docker Hub (public images)
      - name: Pin images to latest
        run: |
          kubectl -n voting-app set image deploy/vote    vote=prouan/vote:latest
          kubectl -n voting-app set image deploy/result  result=prouan/result:latest
          kubectl -n voting-app set image deploy/worker  worker=prouan/worker:latest

      - name: Wait for rollouts
        run: |
          kubectl -n voting-app rollout status deploy/vote --timeout=180s
          kubectl -n voting-app rollout status deploy/result --timeout=180s
          kubectl -n voting-app rollout status deploy/worker --timeout=180s
